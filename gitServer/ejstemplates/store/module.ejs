import Service from "@service/<%= moduleName %>.js";
export default {
    namespaced: true,
    state:{
        selectDataSource:{
        <%_ data.state.dataSource.forEach(function(row){ -%>
            <%= row %>:[],
        <%_ _%><% }) -%>        
        },
        entity:{
        <%_ data.state.entity.forEach(function(row){ -%>
            <%= row %>:[],
        <%_ _%><% }) -%> 
        }
    },
    mutations:{
    <%_ data.mutation.forEach(function(row,index){ -%>
        <%= row %>(state,val){
            state.selectDataSource.<%= data.state.dataSource[index] %>=val;
        },
    <%_ _%><% }) -%>  
        setEntity(state,d){
            state.entity = d
        },
    },
    actions:{
    <%_ data.action.forEach(function(row,index){ -%>
        <%= row %>({state,commit,dispatch},d){
            Service.<%= row %>((t) => {
                commit("set<%= data.extendField[index] %>",t);
                d.cb && d.cb(d)
            })
        },
    <%_ _%><% }) -%>  
        getInfo({state,commit,dispatch},d){
            Service.getInfo(d.params,(t) => {
                commit("setEntity",t.data);
                d.cb && d.cb(d)
            })
        },
        doCreate({state,commit,dispatch},d){
            Service.doCreate(state.entity,(t) => {
                d.cb && d.cb(t)
            })
        },
        doUpdate({state,commit,dispatch},d){
            Service.doUpdate(state.entity,(t) => {
                d.cb && d.cb(t)
            })
        },
        doRemove({state,commit,dispatch},d){
            Service.doRemove(state.entity,(t) => {
                d.cb && d.cb(t)
            })
        },
        doGetList({state,commit,dispatch},d){
            Service.doRemove(state.entity,(t) => {
                d.cb && d.cb(t)
            })
        }
    }
}
